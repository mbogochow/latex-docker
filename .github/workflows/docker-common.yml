name: common

on:
  workflow_call:
    inputs:
      dockerfile:
        required: true
        type: string
        description: "Name of the Dockerfile to build"
      bake_target:
        required: true
        type: string
        description: "Target to build in docker-bake.hcl"
      cache_scope:
        required: true
        type: string
        description: "Scope for build cache"
      image-suffixes:
        required: true
        type: string
        description: "Comma-separated list of image tag suffixes (e.g. 'minimal,full' or 'ubuntu,ubuntu-full')"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mbogochow/latex

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    # Only run on PR if it was merged
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate tag rules
      id: tags
      run: |
        tags=""
        image="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        IFS=',' read -ra suffixes <<< "${{ inputs.image-suffixes }}"
        for suffix in "${suffixes[@]}"; do
          # For tags (releases)
          if [[ "${{ startsWith(github.ref, 'refs/tags/') }}" == "true" ]]; then
            tags="${tags}${image}:${suffix}\n"
            tags="${tags}${image}:${suffix}-${{ github.ref_name }}\n"
          fi

          # For pushes to main
          if [[ "${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}" == "true" ]]; then
            tags="${tags}${image}:${suffix}-dev\n"
            tags="${tags}${image}:${suffix}-${{ github.sha }}\n"
          fi

          # For pull requests
          if [[ "${{ github.event_name == 'pull_request' }}" == "true" ]]; then
            tags="${tags}${image}:${suffix}-dev\n"
            tags="${tags}${image}:${suffix}-pr-${{ github.event.pull_request.number }}\n"
          fi
        done
        echo "tag_list<<EOF" >> $GITHUB_OUTPUT
        echo -e "$tags" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Build and push Docker images
      id: build-and-push
      uses: docker/bake-action@v6
      with:
        files: |
          ./docker-bake.hcl
        targets: ${{ inputs.bake_target }}
        push: true
        set: |
          *.cache-from=type=gha,scope=${{ inputs.cache_scope }}
          *.cache-to=type=gha,mode=max,scope=${{ inputs.cache_scope }}
          *.output=type=registry
          *.args.CI=true
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:*=${{ steps.tags.outputs.tag_list }}

    # TODO: need to debug failures
    # - name: Run Trivy vulnerability scanner
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: ${{ inputs.image_ref }}
    #     format: 'table'
    #     exit-code: '1'
    #     ignore-unfixed: true
    #     vuln-type: 'os,library'
    #     severity: 'CRITICAL,HIGH'