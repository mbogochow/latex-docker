name: common

on:
  workflow_call:
    inputs:
      dockerfile:
        required: true
        type: string
        description: "Name of the Dockerfile to build"
      bake_target:
        required: true
        type: string
        description: "Target to build in docker-bake.hcl"
      cache_scope:
        required: true
        type: string
        description: "Scope for build cache"
      image_ref:
        required: true
        type: string
        description: "Image reference for vulnerability scanning"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mbogochow/latex

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          # For tags (releases)
          type=raw,value=${{ inputs.image_ref }},enable=${{ startsWith(github.ref, 'refs/tags/') }}
          type=raw,value=${{ inputs.image_ref }}-${{ github.ref_name }},enable=${{ startsWith(github.ref, 'refs/tags/') }}

          # For pushes to main
          type=raw,value=${{ inputs.image_ref }}-dev,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          type=raw,value=${{ inputs.image_ref }}-${{ github.sha }},enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

          # For pull requests
          type=raw,value=${{ inputs.image_ref }}-dev,enable=${{ github.event_name == 'pull_request' }}
          type=raw,value=${{ inputs.image_ref }}-pr-${{ github.event.pull_request.number }},enable=${{ github.event_name == 'pull_request' }}

    - name: Build and push Docker images
      id: build-and-push
      uses: docker/bake-action@v6
      with:
        files: |
          ./docker-bake.hcl
        targets: ${{ inputs.bake_target }}
        push: true
        set: |
          *.cache-from=type=gha,scope=${{ inputs.cache_scope }}
          *.cache-to=type=gha,mode=max,scope=${{ inputs.cache_scope }}
          *.tags=${{ steps.meta.outputs.tags }}

    # TODO: need to debug failures
    # - name: Run Trivy vulnerability scanner
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: ${{ inputs.image_ref }}
    #     format: 'table'
    #     exit-code: '1'
    #     ignore-unfixed: true
    #     vuln-type: 'os,library'
    #     severity: 'CRITICAL,HIGH'