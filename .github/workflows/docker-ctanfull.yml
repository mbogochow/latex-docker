name: Docker CTANFull Image CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'Dockerfile.full'
      - 'Dockerfile.basic'
      - '.github/workflows/docker-ctanfull.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'Dockerfile.full'
      - 'Dockerfile.basic'
      - '.github/workflows/docker-ctanfull.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mbogochow/latex

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-buildx-action@v3

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build CTANBasic image (dependency)
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile.basic
        push: false
        load: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:ctanbasic
        cache-from: type=gha,scope=ctanbasic
        cache-to: type=gha,mode=max,scope=ctanbasic

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        flavor: |
          suffix=-ctanfull
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: Build and Push CTANFull Docker image
      id: build-and-push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile.full
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,scope=ctanfull
        cache-to: type=gha,mode=max,scope=ctanfull

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}-ctanfull
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'