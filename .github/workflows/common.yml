name: Common Docker Build Steps

on:
  workflow_call:
    inputs:
      image-suffix:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      target:
        required: false
        type: string
      cache-scope:
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mbogochow/latex

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    # Only run on PR if it was merged
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-buildx-action@v3

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          # For tags (releases)
          type=raw,value=${{ inputs.image-suffix }},enable=${{ startsWith(github.ref, 'refs/tags/') }}
          type=raw,value=${{ inputs.image-suffix }}-${{ github.ref_name }},enable=${{ startsWith(github.ref, 'refs/tags/') }}

          # For pushes to main
          type=raw,value=${{ inputs.image-suffix }}-dev,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          type=raw,value=${{ inputs.image-suffix }}-${{ github.sha }},enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

          # For pull requests
          type=raw,value=${{ inputs.image-suffix }}-dev,enable=${{ github.event_name == 'pull_request' }}
          type=raw,value=${{ inputs.image-suffix }}-pr-${{ github.event.pull_request.number }},enable=${{ github.event_name == 'pull_request' }}

    - name: Build and Push Docker image
      id: build-and-push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ inputs.dockerfile }}
        target: ${{ inputs.target }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,scope=${{ inputs.cache-scope }}
        cache-to: type=gha,mode=max,scope=${{ inputs.cache-scope }}

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image-suffix }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'